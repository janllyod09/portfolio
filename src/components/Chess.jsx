/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 chess.glb --transform --keepmeshes --keepmaterials --format --shadows 
Files: chess.glb [46.17MB] > C:\Users\janllyod09\Desktop\chess-transformed.glb [564.19KB] (99%)
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export function Model(props) {
  const { nodes, materials } = useGLTF('/chess-transformed.glb')
  return (
    <group {...props} dispose={null}>
      <group scale={[17.44, 0.177, 17.44]}>
        <mesh castShadow receiveShadow geometry={nodes.Cube_1.geometry} material={materials.Material} />
        <mesh castShadow receiveShadow geometry={nodes.Cube_2.geometry} material={materials['Material.001']} />
        <mesh castShadow receiveShadow geometry={nodes.Cube_3.geometry} material={materials['Material.002']} />
      </group>
      <mesh castShadow receiveShadow geometry={nodes.Cylinder016.geometry} material={materials['Material.001']} position={[-15.324, 0.407, 6.551]} scale={[1.155, 0.23, 1.155]} />
      <mesh castShadow receiveShadow geometry={nodes.Cylinder017.geometry} material={materials['Material.001']} position={[-15.573, 0.407, -6.801]} scale={[1.155, 0.23, 1.155]} />
      <mesh castShadow receiveShadow geometry={nodes.Cylinder018.geometry} material={materials.Material} position={[15.522, 0.407, -6.568]} scale={[1.155, 0.23, 1.155]} />
      <mesh castShadow receiveShadow geometry={nodes.Cylinder019.geometry} material={materials.Material} position={[15.291, 0.407, 6.411]} scale={[1.155, 0.23, 1.155]} />
      <mesh castShadow receiveShadow geometry={nodes.Cylinder020.geometry} material={materials['Material.001']} position={[-15.665, 0.331, 15.167]} />
      <mesh castShadow receiveShadow geometry={nodes.Cylinder022.geometry} material={materials['Material.001']} position={[-15.411, 0.331, -15.481]} />
      <mesh castShadow receiveShadow geometry={nodes.Cylinder023.geometry} material={materials.Material} position={[15.469, 0.331, -15.324]} />
      <mesh castShadow receiveShadow geometry={nodes.Cylinder024.geometry} material={materials.Material} position={[15.532, 0.331, 15.455]} />
      <mesh castShadow receiveShadow geometry={nodes.Cylinder021.geometry} material={materials['Material.001']} position={[-15.709, 0.371, 2.063]} rotation={[Math.PI, -1.397, Math.PI]} scale={[1.177, 0.194, 1.177]} />
      <mesh castShadow receiveShadow geometry={nodes.Cylinder025.geometry} material={materials.Material} position={[15.646, 0.371, -2.302]} rotation={[0, 1.524, 0]} scale={[1.177, 0.194, 1.177]} />
      <mesh castShadow receiveShadow geometry={nodes.Cylinder026.geometry} material={materials['Material.001']} position={[-15.431, 0.422, -2.226]} scale={[1.044, 0.245, 1.044]} />
      <mesh castShadow receiveShadow geometry={nodes.Cylinder027.geometry} material={materials.Material} position={[15.104, 0.422, 2.1]} scale={[1.044, 0.245, 1.044]} />
      <mesh castShadow receiveShadow geometry={nodes.Cylinder028.geometry} material={materials['Material.001']} position={[-15.409, 0.361, 10.972]} scale={[1.226, 0.208, 1.226]} />
      <mesh castShadow receiveShadow geometry={nodes.Cylinder029.geometry} material={materials['Material.001']} position={[-15.242, 0.384, -10.864]} rotation={[-Math.PI, 0.138, -Math.PI]} scale={[1.226, 0.208, 1.226]} />
      <mesh castShadow receiveShadow geometry={nodes.Cylinder030.geometry} material={materials.Material} position={[15.626, 0.384, -10.856]} rotation={[-Math.PI, 0.138, -Math.PI]} scale={[1.226, 0.208, 1.226]} />
      <mesh castShadow receiveShadow geometry={nodes.Cylinder031.geometry} material={materials.Material} position={[15.4, 0.384, 10.73]} scale={[1.226, 0.208, 1.226]} />
      <instancedMesh args={[nodes.Cylinder.geometry, materials['Material.001'], 8]} castShadow receiveShadow instanceMatrix={nodes.Cylinder.instanceMatrix} />
      <instancedMesh args={[nodes.Cylinder008.geometry, materials.Material, 8]} castShadow receiveShadow instanceMatrix={nodes.Cylinder008.instanceMatrix} />
    </group>
  )
}

useGLTF.preload('/chess-transformed.glb')
